/*
 * This file is generated by jOOQ.
 */
package de.acme.jooq;


import de.acme.jooq.tables.Playlist;
import de.acme.jooq.tables.PlaylistSong;
import de.acme.jooq.tables.Song;
import de.acme.jooq.tables.records.PlaylistRecord;
import de.acme.jooq.tables.records.PlaylistSongRecord;
import de.acme.jooq.tables.records.SongRecord;
import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<PlaylistRecord> PLAYLIST_PKEY = Internal.createUniqueKey(Playlist.PLAYLIST, DSL.name("playlist_pkey"), new TableField[]{Playlist.PLAYLIST.ID}, true);
    public static final UniqueKey<PlaylistSongRecord> PK_PLAYLIST_SONG = Internal.createUniqueKey(PlaylistSong.PLAYLIST_SONG, DSL.name("pk_playlist_song"), new TableField[]{PlaylistSong.PLAYLIST_SONG.SONG_ID, PlaylistSong.PLAYLIST_SONG.PLAYLIST_ID}, true);
    public static final UniqueKey<SongRecord> SONG_PKEY = Internal.createUniqueKey(Song.SONG, DSL.name("song_pkey"), new TableField[]{Song.SONG.ID}, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<PlaylistSongRecord, PlaylistRecord> PLAYLIST_SONG__FK_PLAYLIST_ID = Internal.createForeignKey(PlaylistSong.PLAYLIST_SONG, DSL.name("fk_playlist_id"), new TableField[]{PlaylistSong.PLAYLIST_SONG.PLAYLIST_ID}, Keys.PLAYLIST_PKEY, new TableField[]{Playlist.PLAYLIST.ID}, true);
    public static final ForeignKey<PlaylistSongRecord, SongRecord> PLAYLIST_SONG__FK_SONG_ID = Internal.createForeignKey(PlaylistSong.PLAYLIST_SONG, DSL.name("fk_song_id"), new TableField[]{PlaylistSong.PLAYLIST_SONG.SONG_ID}, Keys.SONG_PKEY, new TableField[]{Song.SONG.ID}, true);
}
